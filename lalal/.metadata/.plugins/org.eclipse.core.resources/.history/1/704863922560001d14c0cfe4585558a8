#include "persona.h"
ePersona* newPersona()
{
    ePersona* pNuevaPersona = (ePersona*) malloc(sizeof(ePersona));

    if(pNuevaPersona != NULL)
    {
        pNuevaPersona->id = 0;
        *(pNuevaPersona->nombre) = '\0';
        *(pNuevaPersona->apellido) = '\0';
        pNuevaPersona->sexo = ' ';
        pNuevaPersona->altura = 0;
    }
    return pNuevaPersona;
}

int mostrarPersona(ePersona* p)
{
    int todoOk = 0;
    if( p != NULL)
    {
        printf("id: %d Nombre: %s sexo: %c altura: %.2f\n",
               p->id, p->nombre, p->sexo, p->altura);
        todoOk = 1;
    }
    return todoOk;
}

ePersona* newPersonaParam(int id, char nombre[], char apellido[], char sexo, float altura)
{
    ePersona* pNuevaPersona = newPersona();

    if(!(personaSetId(pNuevaPersona, id)
            && personaSetNombre(pNuevaPersona, nombre)
            && personaSetApellido(pNuevaPersona, apellido)
            && personaSetSexo(pNuevaPersona, sexo)
            && personaSetAltura(pNuevaPersona, altura)))
    {
        free(pNuevaPersona);
        pNuevaPersona = NULL;
    }
    return pNuevaPersona;
}

int personaSetId(ePersona* p, int id)
{
    int todoOk = 0;
    if(p != NULL && id >= 20000 && id <= 30000)
    {
        p->id = id;
        todoOk = 1;
    }
    return todoOk;
}

int personaSetNombre(ePersona* p, char nombre[])
{
    int todoOk = 0;
    if(p != NULL && nombre != NULL && strlen(nombre) < 20)
    {
        strcpy(p->nombre, nombre);
        strlwr(p->nombre);
        p->nombre[0] = toupper(p->nombre[0]);
        todoOk = 1;
    }
    return todoOk;
}

int personaSetApellido(ePersona* p, char apellido[])
{
    int todoOk = 0;
    if(p != NULL && apellido != NULL && strlen(apellido) < 20)
    {
        strcpy(p->apellido, apellido);
        strlwr(p->apellido);
        p->apellido[0] = toupper(p->apellido[0]);
        todoOk = 1;
    }
    return todoOk;
}


int personaSetSexo(ePersona* p, char sexo)
{
    int todoOk = 0;

    sexo = tolower(sexo);
    if(p != NULL && (sexo == 'f' || sexo == 'm'))
    {
        p->sexo = sexo;
        todoOk = 1;
    }
    return todoOk;
}

int personaSetAltura(ePersona* p, float altura)
{
    int todoOk = 0;


    if(p != NULL && altura > 0)
    {
        p->altura = altura;
        todoOk = 1;
    }
    return todoOk;
}


int personaGetId(ePersona* p, int* pId)
{
    int todoOk = 0;
    if(p != NULL && pId != NULL)
    {
        *pId = p->id;
        todoOk = 1;
    }
    return todoOk;
}

int personaGetSexo(ePersona* p, char* pSexo){
 int todoOk = 0;
    if(p != NULL && pSexo != NULL)
    {
        *pSexo = p->sexo;
        todoOk = 1;
    }
    return todoOk;
}

int personaGetSexoString(ePersona* p, char sexo[]){
int todoOk = 0;
    if(p != NULL && sexo != NULL)
    {
        if(p->sexo == 'f'){
            strcpy(sexo, "Femenino");
        }
        else{
            strcpy(sexo, "Masculino");
        }
        todoOk = 1;
    }
    return todoOk;
}

int personaGetFullName(ePersona* p, char fullName[]){
int todoOk = 0;
    if(p != NULL && fullName != NULL)
    {
        strcpy(fullName, p->nombre);
        strcat(fullName, " ");
        strcat(fullName, p->apellido);
        todoOk = 1;
    }
    return todoOk;
}
int personaGetNombre(ePersona* p, char* nombre)
{
	int todoOk = 0;
	if(p != NULL && nombre != NULL)
	{
		strcpy(nombre, p->nombre);
		todoOk = 1;
	}
	return todoOk;
}
int personaGetapellido(ePersona* p, char* apellido)
{
	int todoOk = 0;
	if(p != NULL && apellido != NULL)
	{
		strcpy(apellido, p->apellido);
		todoOk = 1;
	}
	return todoOk;
}
int personaGetAltura(ePersona* p, float* pAltura)
{
	int todoOk = 0;
	if(p != NULL && pAltura != NULL)
	{
		*pAltura = p->altura;
		todoOk = 1;
	}
	return todoOk;
}
